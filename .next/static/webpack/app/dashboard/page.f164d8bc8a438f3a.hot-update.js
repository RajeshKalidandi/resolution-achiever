"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./src/lib/habit-service.ts":
/*!**********************************!*\
  !*** ./src/lib/habit-service.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   habitService: function() { return /* binding */ habitService; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./src/lib/supabase.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors */ \"(app-pages-browser)/./src/lib/errors.ts\");\n\n\nclass HabitService {\n    async getHabits() {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"habits\").select(\"*\").order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to fetch habits\", \"DATABASE_ERROR\");\n        return data;\n    }\n    async createHabit(habit) {\n        const { data: { user } } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n        if (!user) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"User not found\", \"AUTH_ERROR\", 404);\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"habits\").insert([\n            {\n                ...habit,\n                user_id: user.id\n            }\n        ]).select().single();\n        if (error) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to create habit\", \"DATABASE_ERROR\");\n        return data;\n    }\n    async logHabitCompletion(habitId, mood, triggerNotes, copingStrategy, notes) {\n        const { data: habit, error: habitError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"habits\").select(\"*\").eq(\"id\", habitId).single();\n        if (habitError) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Habit not found\", \"DATABASE_ERROR\", 404);\n        // Create the log entry\n        const { error: logError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"habit_logs\").insert([\n            {\n                habit_id: habitId,\n                mood,\n                trigger_notes: triggerNotes,\n                coping_strategy: copingStrategy,\n                notes\n            }\n        ]);\n        if (logError) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to log completion\", \"DATABASE_ERROR\");\n        // Update streak\n        const lastCompleted = new Date(habit.last_completed || 0);\n        const now = new Date();\n        const daysSinceLastCompletion = Math.floor((now.getTime() - lastCompleted.getTime()) / (1000 * 60 * 60 * 24));\n        let newStreak = habit.current_streak;\n        if (daysSinceLastCompletion <= 1) {\n            newStreak += 1;\n        } else {\n            newStreak = 1;\n        }\n        const { error: updateError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"habits\").update({\n            current_streak: newStreak,\n            longest_streak: Math.max(newStreak, habit.longest_streak),\n            last_completed: new Date().toISOString()\n        }).eq(\"id\", habitId);\n        if (updateError) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to update streak\", \"DATABASE_ERROR\");\n    }\n    async getAddictions() {\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addictions\").select(\"*\").order(\"created_at\", {\n            ascending: false\n        });\n        if (error) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to fetch addictions\", \"DATABASE_ERROR\");\n        return data;\n    }\n    async createAddiction(addiction) {\n        const { data: { user } } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n        if (!user) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"User not found\", \"AUTH_ERROR\", 404);\n        const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addictions\").insert([\n            {\n                ...addiction,\n                user_id: user.id\n            }\n        ]).select().single();\n        if (error) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to create addiction\", \"DATABASE_ERROR\");\n        return data;\n    }\n    async logRelapse(addictionId, trigger, mood, intensity, copingStrategiesUsed, notes) {\n        const { data: addiction, error: addictionError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addictions\").select(\"*\").eq(\"id\", addictionId).single();\n        if (addictionError) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Addiction not found\", \"DATABASE_ERROR\", 404);\n        // Create the relapse log\n        const { error: logError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"relapse_logs\").insert([\n            {\n                addiction_id: addictionId,\n                trigger,\n                mood,\n                intensity,\n                coping_strategies_used: copingStrategiesUsed,\n                notes\n            }\n        ]);\n        if (logError) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to log relapse\", \"DATABASE_ERROR\");\n        // Update streak and relapse count\n        const { error: updateError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addictions\").update({\n            current_streak: 0,\n            relapse_count: addiction.relapse_count + 1\n        }).eq(\"id\", addictionId);\n        if (updateError) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Failed to update addiction\", \"DATABASE_ERROR\");\n    }\n    async calculateMoneySaved(addictionId) {\n        const { data: addiction, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"addictions\").select(\"*\").eq(\"id\", addictionId).single();\n        if (error) throw new _errors__WEBPACK_IMPORTED_MODULE_1__.AppError(\"Addiction not found\", \"DATABASE_ERROR\", 404);\n        if (!addiction.money_saved_per_day) return 0;\n        const quitDate = new Date(addiction.quit_date);\n        const now = new Date();\n        const daysSinceQuitting = Math.floor((now.getTime() - quitDate.getTime()) / (1000 * 60 * 60 * 24));\n        return daysSinceQuitting * addiction.money_saved_per_day;\n    }\n}\nconst habitService = new HabitService();\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9saWIvaGFiaXQtc2VydmljZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDRjtBQTZEbkMsTUFBTUU7SUFDSixNQUFNQyxZQUFZO1FBQ2hCLE1BQU0sRUFBRUMsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNTCwrQ0FBUUEsQ0FDbkNNLElBQUksQ0FBQyxVQUNMQyxNQUFNLENBQUMsS0FDUEMsS0FBSyxDQUFDLGNBQWM7WUFBRUMsV0FBVztRQUFNO1FBRTFDLElBQUlKLE9BQU8sTUFBTSxJQUFJSiw2Q0FBUUEsQ0FBQywwQkFBMEI7UUFDeEQsT0FBT0c7SUFDVDtJQUVBLE1BQU1NLFlBQVlDLEtBQTRGLEVBQUU7UUFDOUcsTUFBTSxFQUFFUCxNQUFNLEVBQUVRLElBQUksRUFBRSxFQUFFLEdBQUcsTUFBTVosK0NBQVFBLENBQUNhLElBQUksQ0FBQ0MsT0FBTztRQUN0RCxJQUFJLENBQUNGLE1BQU0sTUFBTSxJQUFJWCw2Q0FBUUEsQ0FBQyxrQkFBa0IsY0FBYztRQUU5RCxNQUFNLEVBQUVHLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTUwsK0NBQVFBLENBQ25DTSxJQUFJLENBQUMsVUFDTFMsTUFBTSxDQUFDO1lBQUM7Z0JBQUUsR0FBR0osS0FBSztnQkFBRUssU0FBU0osS0FBS0ssRUFBRTtZQUFDO1NBQUUsRUFDdkNWLE1BQU0sR0FDTlcsTUFBTTtRQUVULElBQUliLE9BQU8sTUFBTSxJQUFJSiw2Q0FBUUEsQ0FBQywwQkFBMEI7UUFDeEQsT0FBT0c7SUFDVDtJQUVBLE1BQU1lLG1CQUFtQkMsT0FBZSxFQUFFQyxJQUErRCxFQUFFQyxZQUE0QixFQUFFQyxjQUE4QixFQUFFQyxLQUFxQixFQUFFO1FBQzlMLE1BQU0sRUFBRXBCLE1BQU1PLEtBQUssRUFBRU4sT0FBT29CLFVBQVUsRUFBRSxHQUFHLE1BQU16QiwrQ0FBUUEsQ0FDdERNLElBQUksQ0FBQyxVQUNMQyxNQUFNLENBQUMsS0FD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QUk3RCxlQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9saWIvaGFiaXQtc2VydmljZS50cz9jZTdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN1cGFiYXNlIH0gZnJvbSAnLi9zdXBhYmFzZSdcbmltcG9ydCB7IEFwcEVycm9yIH0gZnJvbSAnLi9lcnJvcnMnXG5cbmV4cG9ydCBpbnRlcmZhY2UgSGFiaXQge1xuICBpZDogc3RyaW5nXG4gIHVzZXJfaWQ6IHN0cmluZ1xuICBuYW1lOiBzdHJpbmdcbiAgZGVzY3JpcHRpb246IHN0cmluZyB8IG51bGxcbiAgZnJlcXVlbmN5OiAnZGFpbHknIHwgJ3dlZWtseScgfCAnbW9udGhseSdcbiAgdGFyZ2V0X2NvdW50OiBudW1iZXJcbiAgY3VycmVudF9zdHJlYWs6IG51bWJlclxuICBsb25nZXN0X3N0cmVhazogbnVtYmVyXG4gIHN0YXJ0X2RhdGU6IHN0cmluZ1xuICBsYXN0X2NvbXBsZXRlZDogc3RyaW5nIHwgbnVsbFxuICBtb29kX3RyYWNraW5nOiBib29sZWFuXG4gIHRyaWdnZXJfdHJhY2tpbmc6IGJvb2xlYW5cbiAgYXJjaGl2ZWQ6IGJvb2xlYW5cbiAgY3JlYXRlZF9hdDogc3RyaW5nXG4gIHVwZGF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEhhYml0TG9nIHtcbiAgaWQ6IHN0cmluZ1xuICBoYWJpdF9pZDogc3RyaW5nXG4gIGNvbXBsZXRlZF9hdDogc3RyaW5nXG4gIG1vb2Q6ICdncmVhdCcgfCAnZ29vZCcgfCAnbmV1dHJhbCcgfCAnYmFkJyB8ICd0ZXJyaWJsZScgfCBudWxsXG4gIHRyaWdnZXJfbm90ZXM6IHN0cmluZyB8IG51bGxcbiAgY29waW5nX3N0cmF0ZWd5OiBzdHJpbmcgfCBudWxsXG4gIG5vdGVzOiBzdHJpbmcgfCBudWxsXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEFkZGljdGlvbiB7XG4gIGlkOiBzdHJpbmdcbiAgdXNlcl9pZDogc3RyaW5nXG4gIG5hbWU6IHN0cmluZ1xuICBkZXNjcmlwdGlvbjogc3RyaW5nIHwgbnVsbFxuICBxdWl0X2RhdGU6IHN0cmluZ1xuICBtb25leV9zYXZlZF9wZXJfZGF5OiBudW1iZXIgfCBudWxsXG4gIHRyaWdnZXJzOiBzdHJpbmdbXVxuICBjb3Bpbmdfc3RyYXRlZ2llczogc3RyaW5nW11cbiAgY3VycmVudF9zdHJlYWs6IG51bWJlclxuICBsb25nZXN0X3N0cmVhazogbnVtYmVyXG4gIHJlbGFwc2VfY291bnQ6IG51bWJlclxuICBlbWVyZ2VuY3lfY29udGFjdF9pZDogc3RyaW5nIHwgbnVsbFxuICBhcmNoaXZlZDogYm9vbGVhblxuICBjcmVhdGVkX2F0OiBzdHJpbmdcbiAgdXBkYXRlZF9hdDogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVsYXBzZUxvZyB7XG4gIGlkOiBzdHJpbmdcbiAgYWRkaWN0aW9uX2lkOiBzdHJpbmdcbiAgcmVsYXBzZV9kYXRlOiBzdHJpbmdcbiAgdHJpZ2dlcjogc3RyaW5nIHwgbnVsbFxuICBtb29kOiAnZ3JlYXQnIHwgJ2dvb2QnIHwgJ25ldXRyYWwnIHwgJ2JhZCcgfCAndGVycmlibGUnXG4gIGludGVuc2l0eTogbnVtYmVyXG4gIGNvcGluZ19zdHJhdGVnaWVzX3VzZWQ6IHN0cmluZ1tdXG4gIG5vdGVzOiBzdHJpbmcgfCBudWxsXG4gIGNyZWF0ZWRfYXQ6IHN0cmluZ1xufVxuXG5jbGFzcyBIYWJpdFNlcnZpY2Uge1xuICBhc3luYyBnZXRIYWJpdHMoKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdoYWJpdHMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAub3JkZXIoJ2NyZWF0ZWRfYXQnLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcblxuICAgIGlmIChlcnJvcikgdGhyb3cgbmV3IEFwcEVycm9yKCdGYWlsZWQgdG8gZmV0Y2ggaGFiaXRzJywgJ0RBVEFCQVNFX0VSUk9SJylcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgY3JlYXRlSGFiaXQoaGFiaXQ6IE9taXQ8SGFiaXQsICdpZCcgfCAnY3VycmVudF9zdHJlYWsnIHwgJ2xvbmdlc3Rfc3RyZWFrJyB8ICdjcmVhdGVkX2F0JyB8ICd1cGRhdGVkX2F0Jz4pIHtcbiAgICBjb25zdCB7IGRhdGE6IHsgdXNlciB9IH0gPSBhd2FpdCBzdXBhYmFzZS5hdXRoLmdldFVzZXIoKVxuICAgIGlmICghdXNlcikgdGhyb3cgbmV3IEFwcEVycm9yKCdVc2VyIG5vdCBmb3VuZCcsICdBVVRIX0VSUk9SJywgNDA0KVxuXG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdoYWJpdHMnKVxuICAgICAgLmluc2VydChbeyAuLi5oYWJpdCwgdXNlcl9pZDogdXNlci5pZCB9XSlcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IG5ldyBBcHBFcnJvcignRmFpbGVkIHRvIGNyZWF0ZSBoYWJpdCcsICdEQVRBQkFTRV9FUlJPUicpXG4gICAgcmV0dXJuIGRhdGFcbiAgfVxuXG4gIGFzeW5jIGxvZ0hhYml0Q29tcGxldGlvbihoYWJpdElkOiBzdHJpbmcsIG1vb2Q/OiAnZ3JlYXQnIHwgJ2dvb2QnIHwgJ25ldXRyYWwnIHwgJ2JhZCcgfCAndGVycmlibGUnIHwgbnVsbCwgdHJpZ2dlck5vdGVzPzogc3RyaW5nIHwgbnVsbCwgY29waW5nU3RyYXRlZ3k/OiBzdHJpbmcgfCBudWxsLCBub3Rlcz86IHN0cmluZyB8IG51bGwpIHtcbiAgICBjb25zdCB7IGRhdGE6IGhhYml0LCBlcnJvcjogaGFiaXRFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdoYWJpdHMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ2lkJywgaGFiaXRJZClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGhhYml0RXJyb3IpIHRocm93IG5ldyBBcHBFcnJvcignSGFiaXQgbm90IGZvdW5kJywgJ0RBVEFCQVNFX0VSUk9SJywgNDA0KVxuXG4gICAgLy8gQ3JlYXRlIHRoZSBsb2cgZW50cnlcbiAgICBjb25zdCB7IGVycm9yOiBsb2dFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdoYWJpdF9sb2dzJylcbiAgICAgIC5pbnNlcnQoW3sgaGFiaXRfaWQ6IGhhYml0SWQsIG1vb2QsIHRyaWdnZXJfbm90ZXM6IHRyaWdnZXJOb3RlcywgY29waW5nX3N0cmF0ZWd5OiBjb3BpbmdTdHJhdGVneSwgbm90ZXMgfV0pXG5cbiAgICBpZiAobG9nRXJyb3IpIHRocm93IG5ldyBBcHBFcnJvcignRmFpbGVkIHRvIGxvZyBjb21wbGV0aW9uJywgJ0RBVEFCQVNFX0VSUk9SJylcblxuICAgIC8vIFVwZGF0ZSBzdHJlYWtcbiAgICBjb25zdCBsYXN0Q29tcGxldGVkID0gbmV3IERhdGUoaGFiaXQubGFzdF9jb21wbGV0ZWQgfHwgMClcbiAgICBjb25zdCBub3cgPSBuZXcgRGF0ZSgpXG4gICAgY29uc3QgZGF5c1NpbmNlTGFzdENvbXBsZXRpb24gPSBNYXRoLmZsb29yKFxuICAgICAgKG5vdy5nZXRUaW1lKCkgLSBsYXN0Q29tcGxldGVkLmdldFRpbWUoKSkgLyAoMTAwMCAqIDYwICogNjAgKiAyNClcbiAgICApXG5cbiAgICBsZXQgbmV3U3RyZWFrID0gaGFiaXQuY3VycmVudF9zdHJlYWtcbiAgICBpZiAoZGF5c1NpbmNlTGFzdENvbXBsZXRpb24gPD0gMSkge1xuICAgICAgbmV3U3RyZWFrICs9IDFcbiAgICB9IGVsc2Uge1xuICAgICAgbmV3U3RyZWFrID0gMVxuICAgIH1cblxuICAgIGNvbnN0IHsgZXJyb3I6IHVwZGF0ZUVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2hhYml0cycpXG4gICAgICAudXBkYXRlKHtcbiAgICAgICAgY3VycmVudF9zdHJlYWs6IG5ld1N0cmVhayxcbiAgICAgICAgbG9uZ2VzdF9zdHJlYWs6IE1hdGgubWF4KG5ld1N0cmVhaywgaGFiaXQubG9uZ2VzdF9zdHJlYWspLFxuICAgICAgICBsYXN0X2NvbXBsZXRlZDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgfSlcbiAgICAgIC5lcSgnaWQnLCBoYWJpdElkKVxuXG4gICAgaWYgKHVwZGF0ZUVycm9yKSB0aHJvdyBuZXcgQXBwRXJyb3IoJ0ZhaWxlZCB0byB1cGRhdGUgc3RyZWFrJywgJ0RBVEFCQVNFX0VSUk9SJylcbiAgfVxuXG4gIGFzeW5jIGdldEFkZGljdGlvbnMoKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhZGRpY3Rpb25zJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLm9yZGVyKCdjcmVhdGVkX2F0JywgeyBhc2NlbmRpbmc6IGZhbHNlIH0pXG5cbiAgICBpZiAoZXJyb3IpIHRocm93IG5ldyBBcHBFcnJvcignRmFpbGVkIHRvIGZldGNoIGFkZGljdGlvbnMnLCAnREFUQUJBU0VfRVJST1InKVxuICAgIHJldHVybiBkYXRhXG4gIH1cblxuICBhc3luYyBjcmVhdGVBZGRpY3Rpb24oYWRkaWN0aW9uOiBPbWl0PEFkZGljdGlvbiwgJ2lkJyB8ICdjdXJyZW50X3N0cmVhaycgfCAnbG9uZ2VzdF9zdHJlYWsnIHwgJ3JlbGFwc2VfY291bnQnIHwgJ2NyZWF0ZWRfYXQnIHwgJ3VwZGF0ZWRfYXQnPikge1xuICAgIGNvbnN0IHsgZGF0YTogeyB1c2VyIH0gfSA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG4gICAgaWYgKCF1c2VyKSB0aHJvdyBuZXcgQXBwRXJyb3IoJ1VzZXIgbm90IGZvdW5kJywgJ0FVVEhfRVJST1InLCA0MDQpXG5cbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2FkZGljdGlvbnMnKVxuICAgICAgLmluc2VydChbeyAuLi5hZGRpY3Rpb24sIHVzZXJfaWQ6IHVzZXIuaWQgfV0pXG4gICAgICAuc2VsZWN0KClcbiAgICAgIC5zaW5nbGUoKVxuXG4gICAgaWYgKGVycm9yKSB0aHJvdyBuZXcgQXBwRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgYWRkaWN0aW9uJywgJ0RBVEFCQVNFX0VSUk9SJylcbiAgICByZXR1cm4gZGF0YVxuICB9XG5cbiAgYXN5bmMgbG9nUmVsYXBzZShhZGRpY3Rpb25JZDogc3RyaW5nLCB0cmlnZ2VyPzogc3RyaW5nIHwgbnVsbCwgbW9vZD86ICdncmVhdCcgfCAnZ29vZCcgfCAnbmV1dHJhbCcgfCAnYmFkJyB8ICd0ZXJyaWJsZScsIGludGVuc2l0eT86IG51bWJlciwgY29waW5nU3RyYXRlZ2llc1VzZWQ/OiBzdHJpbmdbXSwgbm90ZXM/OiBzdHJpbmcgfCBudWxsKSB7XG4gICAgY29uc3QgeyBkYXRhOiBhZGRpY3Rpb24sIGVycm9yOiBhZGRpY3Rpb25FcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdhZGRpY3Rpb25zJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgICAgLmVxKCdpZCcsIGFkZGljdGlvbklkKVxuICAgICAgLnNpbmdsZSgpXG5cbiAgICBpZiAoYWRkaWN0aW9uRXJyb3IpIHRocm93IG5ldyBBcHBFcnJvcignQWRkaWN0aW9uIG5vdCBmb3VuZCcsICdEQVRBQkFTRV9FUlJPUicsIDQwNClcblxuICAgIC8vIENyZWF0ZSB0aGUgcmVsYXBzZSBsb2dcbiAgICBjb25zdCB7IGVycm9yOiBsb2dFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdyZWxhcHNlX2xvZ3MnKVxuICAgICAgLmluc2VydChbeyBhZGRpY3Rpb25faWQ6IGFkZGljdGlvbklkLCB0cmlnZ2VyLCBtb29kLCBpbnRlbnNpdHksIGNvcGluZ19zdHJhdGVnaWVzX3VzZWQ6IGNvcGluZ1N0cmF0ZWdpZXNVc2VkLCBub3RlcyB9XSlcblxuICAgIGlmIChsb2dFcnJvcikgdGhyb3cgbmV3IEFwcEVycm9yKCdGYWlsZWQgdG8gbG9nIHJlbGFwc2UnLCAnREFUQUJBU0VfRVJST1InKVxuXG4gICAgLy8gVXBkYXRlIHN0cmVhayBhbmQgcmVsYXBzZSBjb3VudFxuICAgIGNvbnN0IHsgZXJyb3I6IHVwZGF0ZUVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2FkZGljdGlvbnMnKVxuICAgICAgLnVwZGF0ZSh7XG4gICAgICAgIGN1cnJlbnRfc3RyZWFrOiAwLFxuICAgICAgICByZWxhcHNlX2NvdW50OiBhZGRpY3Rpb24ucmVsYXBzZV9jb3VudCArIDEsXG4gICAgICB9KVxuICAgICAgLmVxKCdpZCcsIGFkZGljdGlvbklkKVxuXG4gICAgaWYgKHVwZGF0ZUVycm9yKSB0aHJvdyBuZXcgQXBwRXJyb3IoJ0ZhaWxlZCB0byB1cGRhdGUgYWRkaWN0aW9uJywgJ0RBVEFCQVNFX0VSUk9SJylcbiAgfVxuXG4gIGFzeW5jIGNhbGN1bGF0ZU1vbmV5U2F2ZWQoYWRkaWN0aW9uSWQ6IHN0cmluZyk6IFByb21pc2U8bnVtYmVyPiB7XG4gICAgY29uc3QgeyBkYXRhOiBhZGRpY3Rpb24sIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2FkZGljdGlvbnMnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAuZXEoJ2lkJywgYWRkaWN0aW9uSWQpXG4gICAgICAuc2luZ2xlKClcblxuICAgIGlmIChlcnJvcikgdGhyb3cgbmV3IEFwcEVycm9yKCdBZGRpY3Rpb24gbm90IGZvdW5kJywgJ0RBVEFCQVNFX0VSUk9SJywgNDA0KVxuICAgIGlmICghYWRkaWN0aW9uLm1vbmV5X3NhdmVkX3Blcl9kYXkpIHJldHVybiAwXG5cbiAgICBjb25zdCBxdWl0RGF0ZSA9IG5ldyBEYXRlKGFkZGljdGlvbi5xdWl0X2RhdGUpXG4gICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKVxuICAgIGNvbnN0IGRheXNTaW5jZVF1aXR0aW5nID0gTWF0aC5mbG9vcihcbiAgICAgIChub3cuZ2V0VGltZSgpIC0gcXVpdERhdGUuZ2V0VGltZSgpKSAvICgxMDAwICogNjAgKiA2MCAqIDI0KVxuICAgIClcblxuICAgIHJldHVybiBkYXlzU2luY2VRdWl0dGluZyAqIGFkZGljdGlvbi5tb25leV9zYXZlZF9wZXJfZGF5XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGhhYml0U2VydmljZSA9IG5ldyBIYWJpdFNlcnZpY2UoKVxuIl0sIm5hbWVzIjpbInN1cGFiYXNlIiwiQXBwRXJyb3IiLCJIYWJpdFNlcnZpY2UiLCJnZXRIYWJpdHMiLCJkYXRhIiwiZXJyb3IiLCJmcm9tIiwic2VsZWN0Iiwib3JkZXIiLCJhc2NlbmRpbmciLCJjcmVhdGVIYWJpdCIsImhhYml0IiwidXNlciIsImF1dGgiLCJnZXRVc2VyIiwiaW5zZXJ0IiwidXNlcl9pZCIsImlkIiwic2luZ2xlIiwibG9nSGFiaXRDb21wbGV0aW9uIiwiaGFiaXRJZCIsIm1vb2QiLCJ0cmlnZ2VyTm90ZXMiLCJjb3BpbmdTdHJhdGVneSIsIm5vdGVzIiwiaGFiaXRFcnJvciIsImVxIiwibG9nRXJyb3IiLCJoYWJpdF9pZCIsInRyaWdnZXJfbm90ZXMiLCJjb3Bpbmdfc3RyYXRlZ3kiLCJsYXN0Q29tcGxldGVkIiwiRGF0ZSIsImxhc3RfY29tcGxldGVkIiwibm93IiwiZGF5c1NpbmNlTGFzdENvbXBsZXRpb24iLCJNYXRoIiwiZmxvb3IiLCJnZXRUaW1lIiwibmV3U3RyZWFrIiwiY3VycmVudF9zdHJlYWsiLCJ1cGRhdGVFcnJvciIsInVwZGF0ZSIsImxvbmdlc3Rfc3RyZWFrIiwibWF4IiwidG9JU09TdHJpbmciLCJnZXRBZGRpY3Rpb25zIiwiY3JlYXRlQWRkaWN0aW9uIiwiYWRkaWN0aW9uIiwibG9nUmVsYXBzZSIsImFkZGljdGlvbklkIiwidHJpZ2dlciIsImludGVuc2l0eSIsImNvcGluZ1N0cmF0ZWdpZXNVc2VkIiwiYWRkaWN0aW9uRXJyb3IiLCJhZGRpY3Rpb25faWQiLCJjb3Bpbmdfc3RyYXRlZ2llc191c2VkIiwicmVsYXBzZV9jb3VudCIsImNhbGN1bGF0ZU1vbmV5U2F2ZWQiLCJtb25leV9zYXZlZF9wZXJfZGF5IiwicXVpdERhdGUiLCJxdWl0X2RhdGUiLCJkYXlzU2luY2VRdWl0dGluZyIsImhhYml0U2VydmljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/habit-service.ts\n"));

/***/ })

});